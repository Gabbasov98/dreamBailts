{"version":3,"sources":["a-sliders.js","b-catalog-item.js","c-catalog.js","e-modal.js","01_main.js"],"names":[],"mappingsppfile":"../js/main.min.js","sourcesContent":["function gallery() {\r\n    var swiper = new Swiper(\".gallery .mySwiper\", {\r\n        spaceBetween: 0,\r\n        slidesPerView: \"auto\",\r\n        freeMode: true,\r\n        watchSlidesProgress: true,\r\n    });\r\n    var swiper2 = new Swiper(\".gallery .mySwiper2\", {\r\n        spaceBetween: 0,\r\n        slidesPerView: \"auto\",\r\n        thumbs: {\r\n            swiper: swiper,\r\n        },\r\n        navigation: {\r\n            nextEl: '.gallery .swiper-button-next',\r\n            prevEl: '.gallery .swiper-button-prev',\r\n        },\r\n        pagination: {\r\n            el: '.gallery .swiper-pagination',\r\n            type: 'bullets',\r\n            clickable: true,\r\n        },\r\n    });\r\n}\r\n\r\ngallery()\r\n","let tabBlocks = document.querySelectorAll(\"._tabs-parent\")\r\n\r\ntabBlocks.forEach(tabBlock => {\r\n    let tabs = tabBlock.querySelectorAll(\"._tab\")\r\n    let tabContents = tabBlock.querySelectorAll(\"._tab-content\")\r\n\r\n    tabs.forEach(tab => {\r\n        tab.onclick = function(){\r\n            let tabId = this.dataset.tab\r\n\r\n            tabs.forEach(tab => {\r\n                tab.classList.remove(\"_active\")\r\n            })\r\n            tab.classList.add(\"_active\")\r\n\r\n            tabContents.forEach(tabContent => {\r\n                tabContent.classList.remove(\"_active\")\r\n            })\r\n            tabBlock.querySelector(`._tab-content.${tabId}`).classList.add(\"_active\")\r\n        }\r\n\r\n    })\r\n})\r\n\r\n\r\n$(\".mob-detail__show\").click(function () {\r\n    $(this).parents(\".mob-detail\").toggleClass(\"_active\")\r\n    $(this).siblings(\".mob-detail__hidden\").slideToggle()\r\n})\r\n\r\n$(\"._show-all-colors\").click(function () {\r\n    $(\".colors\").addClass(\"_all-colors\")\r\n})\r\n\r\n$(\".color-field input\").change(function () {\r\n    setColor($(this))\r\n})\r\n\r\nsetColor($(\".color-field input:checked\"))\r\n\r\nfunction setColor(el) {\r\n    let title = $(el).parents(\".color-field\").find(\"._color-title\").text().replace(/\\s+/g, \" \")\r\n    $(\"._selected-color\").html(title)\r\n}\r\n\r\nfunction cartCalc(){\r\n    $('.cartcalc .ccalc-minus').click(function(){\r\n        let a = $(this).closest('.cartcalc').find('input').val();\r\n        if(a>1){\r\n            let b = +a-1;\r\n            $(this).closest('.cartcalc').find('input').val(b);\r\n        }else{\r\n            $(this).closest('.cartcalc').find('input').val(a);\r\n            $(\".cart-nav\").removeClass(\"_added\")\r\n        }\r\n    });\r\n    $('.cartcalc .ccalc-plus').click(function(){\r\n        let a = $(this).closest('.cartcalc').find('input').val();\r\n        let b = +a+1;\r\n        $(this).closest('.cartcalc').find('input').val(b);\r\n    });\r\n}\r\ncartCalc()\r\n\r\n$(\"._add-to-cart\").click(function () {\r\n    $(\".cart-nav\").addClass(\"_added\")\r\n})\r\n\r\nfixCartNav()\r\n$(window).scroll(function() {\r\n    fixCartNav()\r\n})\r\n\r\nfunction fixCartNav() {\r\n    if ($(window).scrollTop() > 800) {\r\n        $(\".buy-section\").addClass(\"_show\")\r\n    } else {\r\n        $(\".buy-section\").removeClass(\"_show\")\r\n    }\r\n}\r\n\r\n$(\"._all-props\").click(function () {\r\n    $(\".catalog-detail\").find(\"[data-tab='_tab2']\").click()\r\n})\r\n","$(\".filter-group__toggle\").click(function () {\r\n    let parent = $(this).parents(\".filter-group\")\r\n\r\n    $(parent).toggleClass(\"_active\")\r\n    console.log($(parent).find(\".filter-group__bottom\"))\r\n    $(parent).find(\".filter-group__bottom\").slideToggle()\r\n})\r\n\r\n$(\".filter-group__more\").click(function () {\r\n    $(this).siblings(\".filter-group__checkboxes\").addClass(\"_show-all\")\r\n})\r\n\r\n\r\nlet filterSliders = document.querySelectorAll(\".filter-slider\")\r\n\r\nfilterSliders.forEach(slider => {\r\n    const rangeSlider = slider.querySelector(`.range-slider`)\r\n    const rangeInput0 = slider.querySelector(`.range-slider__input1`)\r\n    const rangeInput1 = slider.querySelector(`.range-slider__input2`)\r\n    const rangeInputs = [rangeInput0, rangeInput1]\r\n\r\n    let startValue1 = +slider.getAttribute(\"data-start\")\r\n    let startValue2 = +slider.getAttribute(\"data-start2\")\r\n    let min = +slider.getAttribute(\"data-min\")\r\n    let max = +slider.getAttribute(\"data-max\")\r\n\r\n    if (rangeSlider) {\r\n        noUiSlider.create(rangeSlider, {\r\n            start: [startValue1, startValue2],\r\n            connect: true,\r\n            step: 1,\r\n            range: {\r\n                'min': min,\r\n                'max': max\r\n            },\r\n            pips: {mode: 'count', values: 5}\r\n        });\r\n    }\r\n    if (rangeSlider) {\r\n        rangeSlider.noUiSlider.on('update', function(values, handle) {\r\n            rangeInputs[handle].value = Math.round(values[handle])\r\n        })\r\n        rangeInputs.forEach((el, index) => {\r\n            el.addEventListener('change', (e) => {\r\n                setRangeSlider(index, e.currentTarget.value)\r\n            })\r\n        })\r\n    }\r\n    const setRangeSlider = (i, value) => {\r\n        let array = [null, null];\r\n        array[i] = value;\r\n\r\n        rangeSlider.noUiSlider.set(array);\r\n    };\r\n})\r\n\r\n\r\n$(\".mob-filter__btn\").click(function () {\r\n    $(\".filter\").toggleClass(\"_active\")\r\n    $(\"body\").toggleClass(\"fixed-body\")\r\n})\r\n\r\n$(\".filter__close\").click(function () {\r\n    $(\".filter\").toggleClass(\"_active\")\r\n    $(\"body\").toggleClass(\"fixed-body\")\r\n})\r\n\r\n\r\n$(\".cart-info__close\").click(function () {\r\n    $(\".cart-info\").removeClass(\"_active\")\r\n})\r\n\r\n$(\"._add-to-cart\").click(function () {\r\n    $(this).toggleClass(\"_active\")\r\n})\r\n\r\n","let modalTogglers = document.querySelectorAll(\"[data-modal]\")\nlet modals = document.querySelectorAll(\".modal\")\nlet body = document.querySelector(\"body\")\n\nmodalTogglers.forEach(el => {\n    el.onclick = function () {\n        let modalId = el.getAttribute(\"data-modal\")\n        let modal = document.querySelector(`#${modalId}`)\n        let closeButtons = modal.querySelectorAll(`._close-modal`)\n\n        modal.classList.add(\"_active\")\n        body.classList.add(\"fixed-body2\")\n\n        console.log(closeButtons)\n\n        closeButtons.forEach(btn => {\n            btn.onclick = ()=> {\n                modal.classList.remove(\"_active\")\n                body.classList.remove(\"fixed-body2\")\n            }\n        })\n    }\n})\n\n\n\nvar getScrollBarSize = (function() {\n    var el = window.document.createElement('textarea'), style = {\n        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',\n        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',\n        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'\n    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;\n\n    for (var key in style) {\n        if (style.hasOwnProperty(key)) {\n            el.style[key] = style[key];\n        }\n    }\n\n    return function() {\n        var size = null;\n        if (support && window.document.body) {\n            window.document.body.appendChild(el);\n            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];\n            window.document.body.removeChild(el);\n        }\n\n        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);\n        return size;\n    };\n})();\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    $(\".m-select select\").niceSelect()\r\n    $('input[type=\"tel\"]').mask('+7 (999) 999-99-99', { autoclear: false }, { placeholder: '+7 (   )    -  -  ' });\r\n\r\n    fix100vh();\r\n    getScrollBarSize()\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n        getScrollBarSize()\r\n    })\r\n\r\n\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n\r\n$( function() {\r\n    $.widget( \"custom.combobox\", {\r\n        _create: function() {\r\n            this.wrapper = $( \"<span>\" )\r\n                .addClass( \"custom-combobox\" )\r\n                .insertAfter( this.element );\r\n\r\n            this.element.hide();\r\n            this._createAutocomplete();\r\n            this._createShowAllButton();\r\n        },\r\n\r\n        _createAutocomplete: function() {\r\n            var selected = this.element.children( \":selected\" ),\r\n                value = selected.val() ? selected.text() : \"\";\r\n\r\n            this.input = $( \"<input>\" )\r\n                .appendTo( this.wrapper )\r\n                .val( value )\r\n                .attr( \"title\", \"\" )\r\n                .addClass( \"custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left\" )\r\n                .autocomplete({\r\n                    delay: 0,\r\n                    minLength: 0,\r\n                    source: this._source.bind( this )\r\n                })\r\n                .tooltip({\r\n                    classes: {\r\n                        \"ui-tooltip\": \"ui-state-highlight\"\r\n                    }\r\n                });\r\n\r\n            this._on( this.input, {\r\n                autocompleteselect: function( event, ui ) {\r\n                    ui.item.option.selected = true;\r\n                    this._trigger( \"select\", event, {\r\n                        item: ui.item.option\r\n                    });\r\n                },\r\n\r\n                autocompletechange: \"_removeIfInvalid\"\r\n            });\r\n        },\r\n\r\n        _createShowAllButton: function() {\r\n            var input = this.input,\r\n                wasOpen = false;\r\n\r\n            $( \"<a>\" )\r\n                .attr( \"tabIndex\", -1 )\r\n                .attr( \"title\", \"Показать все варианты\" )\r\n                .tooltip()\r\n                .appendTo( this.wrapper )\r\n                .button({\r\n                    icons: {\r\n                        primary: \"ui-icon-triangle-1-s\"\r\n                    },\r\n                    text: false\r\n                })\r\n                .removeClass( \"ui-corner-all\" )\r\n                .addClass( \"custom-combobox-toggle ui-corner-right\" )\r\n                .on( \"mousedown\", function() {\r\n                    wasOpen = input.autocomplete( \"widget\" ).is( \":visible\" );\r\n                })\r\n                .on( \"click\", function() {\r\n                    input.trigger( \"focus\" );\r\n\r\n                    // Close if already visible\r\n                    if ( wasOpen ) {\r\n                        return;\r\n                    }\r\n\r\n                    // Pass empty string as value to search for, displaying all results\r\n                    input.autocomplete( \"search\", \"\" );\r\n                });\r\n        },\r\n\r\n        _source: function( request, response ) {\r\n            var matcher = new RegExp( $.ui.autocomplete.escapeRegex(request.term), \"i\" );\r\n            response( this.element.children( \"option\" ).map(function() {\r\n                var text = $( this ).text();\r\n                if ( this.value && ( !request.term || matcher.test(text) ) )\r\n                    return {\r\n                        label: text,\r\n                        value: text,\r\n                        option: this\r\n                    };\r\n            }) );\r\n        },\r\n\r\n        _removeIfInvalid: function( event, ui ) {\r\n\r\n            // Selected an item, nothing to do\r\n            if ( ui.item ) {\r\n                return;\r\n            }\r\n\r\n            // Search for a match (case-insensitive)\r\n            var value = this.input.val(),\r\n                valueLowerCase = value.toLowerCase(),\r\n                valid = false;\r\n            this.element.children( \"option\" ).each(function() {\r\n                if ( $( this ).text().toLowerCase() === valueLowerCase ) {\r\n                    this.selected = valid = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            // Found a match, nothing to do\r\n            if ( valid ) {\r\n                return;\r\n            }\r\n\r\n            // Remove invalid value\r\n            this.input\r\n                .val( \"\" )\r\n                .attr( \"title\", value + \" не надено совпадений\" )\r\n                .tooltip( \"open\" );\r\n            this.element.val( \"\" );\r\n            this._delay(function() {\r\n                this.input.tooltip( \"close\" ).attr( \"title\", \"\" );\r\n            }, 2500 );\r\n            this.input.autocomplete( \"instance\" ).term = \"\";\r\n        },\r\n\r\n        _destroy: function() {\r\n            this.wrapper.remove();\r\n            this.element.show();\r\n        }\r\n    });\r\n\r\n    $( \".autocomplete-select\" ).combobox();\r\n    // $( \"#toggle\" ).on( \"click\", function() {\r\n    //     $( \"#combobox\" ).toggle();\r\n    // });\r\n    $(document).on('click', '.custom-combobox-toggle', function(e) {\r\n        let parent = $(this).parents(\".autocomplete-select\")\r\n        $(parent).toggle();\r\n    })\r\n} );\r\n"]}